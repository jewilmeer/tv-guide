- page_title @program.name
- content_for(:bottom_js_domready) do
  :plain
    $('#check_update')
      .bind('ajax:loading', function() {
        var $this = $(this);
        $this.html('Checking...');
      })
      .bind('ajax:failure', function() {
        var $this = $(this);
        $this.html( 'Update failed!' );
      })
      .bind('ajax:success', function(xhr,data,status) {
        var $this = $(this);
        data      = data.replace(/\W/, '');
        if( data == 'true' ) {
          $this.html('Update found, updating...')
          $.ajax({
            url: '#{program_path(@program)}', 
            data: { _method: 'put' },
            success: function() {
              $this.html('Update complete, reloading!');
              document.location.href = document.location.href;
            }
          });
        } else {
          $this.html('No update available');
        }
      })
%h1== Programma: #{@program.name} [#{@program.status}]

.column-block
  .body
    = image_tag( @program.banner_url, :class => :flt_left ) if @program.banner?
    %ul.program_options.flt_right 
      %li
        - if @program.users.any?
          %abbr{:title => @program.users.map(&:login).to_sentence}= pluralize(@program.users.count, 'watcher')
        - else
          No watchers
      %li== Last updated #{distance_of_time_in_words_to_now(@program.tvdb_last_update)} ago
      %li= link_to 'Imdb page', "http://www.imdb.com/title/#{@program.imdb_id}"
      %li= link_to 'View update list', program_updates_path(@program)
      - if current_user
        %li= link_to 'Check for updates', edit_program_path(@program), :id => :check_update, :remote => true, :'ajax:loading' => 'checking...'
        - if current_user.programs.include?(@program)
          %li= link_to 'Remove from your episode guide', user_program_path(current_user, @program), :method => :delete
        - else
          %li= link_to 'Add to your episode guide', user_programs_path(current_user, :id => @program.id), :method => :post
    .row_seperator
    %table
      %tr
        %th{:width => 100} Runtime
        %td= pluralize( @program.runtime, 'minute')
        %th{:width => 100} Genres
        %td= @program.genres.to_sentence(:last_word_connector => ' and ')
        %th{:width => 100} Network
        %td{:width => 150}= @program.network
      %tr
        %th Next episode
        %td
          - if episode = @program.episodes.airs_at_after(Time.now).first
            = l episode.airs_at, :format => :long
          - else
            \-
        %th Thetvdb rating
        %td= @program.tvdb_rating || 'Not available'
        %th Content rating
        %td= @program.contentrating || 'Not available'
      - if @program.actors.any?
        %tr
          %th.top Actors
          %td{:colspan => 5}= @program.actors.to_sentence(:last_word_connector => ' and ')
      %tr
        %th.top Overview
        %td{:colspan => 5}= @program.overview

- if @program.seasons.any?
  .tabs
    %ul
      - @program.seasons.by_nr(:desc).each do |season|
        %li
          %a{:href => "#tabs-#{season.nr}"}
            - if season.nr == 0
              Pilots & Specials
              == (#{season.episodes.length})
            - else
              == Season #{season.nr} (#{season.episodes.length})
            
    - @program.seasons.by_nr(:desc).each do |season|
      %div{:id => "tabs-#{season.nr}"}
        %table.list
          %thead
            %tr
              %th Title
              %th{:width => 150} Airdate
          %tbody
            = render :collection => season.episodes.by_nr(:desc), :partial => 'episodes/episodes', :as => :episode
            -#
              - season.episodes.by_nr(:desc).each do |episode|
                %tr[episode]
                  %td
                    = link_to episode.full_episode_title, [@program, episode]
                    - if current_user && current_user.trusted? && episode.airs_at && episode.airs_at.past?
                      - if episode.nzb?
                        == [#{link_to "Download", program_episode_path(@program, episode, :format => :nzb)}]
                      == [#{link_to "Search", search_program_episode_path(@program, episode)}]
                      == [#{link_to "Search HD", search_program_episode_path(@program, episode, :hd => true)}]
                      - if current_user.admin?
                        \|
                        == [#{link_to 'Redownload', admin_episode_path(episode, :format => :js), :method => :put, :remote => true}]
                  
                  %td{:width => 220}
                    - if episode.airs_at
                      = l(episode.airs_at.to_date, :format => :with_day)
                    - else
                      \-
- else
  .column-block
    .body
      %p.nothing No seasons yet!
.row_seperator
  
.column-block
  %h2 Comments
  .body
    #disqus_thread
:javascript
  var disqus_identifier = '#{dom_id(@program)}';
  var disqus_url = '#{program_url(@program)}';
