- if current_user.try(:trusted?)
  - content_for :head do
    = auto_discovery_link_tag :format => :rss

- page_title @program.name
- content_for(:bottom_js_domready) do
  :plain
    $('#check_update')
      .bind('ajax:beforeSend', function() {
        var $this = $(this);
        $this.html('Checking...');
      })
      .bind('ajax:failure', function() {
        var $this = $(this);
        $this.html( 'Update failed!' );
      })
      .bind('ajax:success', function(xhr,data,status) {
        var $this = $(this);
        if( data ) {
          $this.html('Updated, reloading')
          document.location.href = document.location.href;
        } else {
          $this.html('No update available');
        }
      })

%section{:data => {:role => :page}}
  .page-header{:date => {:role => :header}}
    %h1
      = @program.name
      %small
        = @program.status
      - if current_user.try(:trusted?)
        = link_to(tokened_program_path(:id => @program.id, :user_credentials => current_user.single_access_token, :format => :rss), :class => 'right-rss') do 
          = icon_tag('rss', :size => '24x24', :alt => 'RSS feed')
  .row
    %ul.tabs
      %li.active= link_to 'Season Overview', '#seasons'
      %li= link_to 'More information', '#more-info'
      / %li= link_to 'Options and other stuff', '#other'
  .row
    .span12.columns
      - if @featured_image
        = image_tag("#{@featured_image.id}.jpg", :size => '700x129')
      - else
        = image_tag( @program.banner_url, :size => '940x173') if @program.banner?
    .span4.columns
      %ul.unstyled
        %li
          - if @program.users.any?
            %abbr{:title => @program.users.map(&:login).to_sentence}= pluralize(@program.users.count, 'watcher')
          - else
            No watchers
        %li== Last updated #{distance_of_time_in_words_to_now(@program.tvdb_last_update)} ago
        %li= link_to 'Imdb page', "http://www.imdb.com/title/#{@program.imdb_id}"
        / %li= link_to 'View update list', program_updates_path(@program)
        - if current_user
          %li= link_to 'Check for updates', user_program_path(current_user, @program), :id => :check_update, :remote => true, :method => :put
          - if current_user.programs.include?(@program)
            %li= link_to 'Remove from your episode guide', user_program_path(current_user, @program), :method => :delete
          - else
            %li
              Add to your episode guide
              %br
              %ul.downloads
                - SearchTermType.all.each do |search_term_type|
                  %li= link_to search_term_type.name, user_program_preferences_path(current_user, :program_preference => {:program_id => @program.id, :search_term_type_id => search_term_type.id}), :method => :post
          
%section.tab-content#tab-seasons
  .page-header
    %h3 Seasons
  .row
    %ul.tabs
      - @program.max_season_nr.downto( @program.max_season_nr > 8 ? @program.max_season_nr-7 : 1) do |season|
        %li{:class => (:active if @program.max_season_nr == season)}
          %a{:href => "#s#{season}"}== Season #{season} (#{@program.episodes.where('season_nr = ?', season).count})
  - @program.max_season_nr.downto(1) do |season|
    .tab-content{:id => "tab-s#{season}", :style => ('display: none' unless @program.max_season_nr == season)}
      %table.zebra-striped
        %thead
          %tr
            %th Title
            %th{:width => 150} Airdate
        %tbody
          = render :collection => @program.episodes.where('season_nr = ?', season).by_nr(:desc), :partial => 'episodes/episodes', :as => :episode

%section.tab-content#tab-more-info{:style => 'display: none'}
  .page-header
    %h3 More information
  .row
    %table
      %tr
        %th{:width => 100} Runtime
        %td= pluralize( @program.runtime, 'minute')
        %th{:width => 100} Genres
        %td= @program.genres.map(&:name).to_sentence
        %th{:width => 100} Network
        %td{:width => 150}= @program.network
      %tr
        %th Next episode
        %td
          - if episode = @program.episodes.next_airing.first
            = l episode.airs_at, :format => :long
          - else
            \-
        %th Thetvdb rating
        %td= @program.tvdb_rating || 'Not available'
        %th Content rating
        %td= @program.contentrating || 'Not available'
      - if @program.actors.any?
        %tr
          %th.top Actors
          %td{:colspan => 5}= @program.actors.to_sentence(:last_word_connector => ' and ')
      %tr
        %th.top Overview
        %td{:colspan => 5}= @program.overview