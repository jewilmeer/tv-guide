- require 'pp'
%section#program
  .row.page_nav
    .span8.prev
      - if @nav[:next].present?
        &lt; Previous: 
        = link_to @nav[:next].name, [:admin, @nav[:next]]
      &nbsp;
    .span8.next
      &nbsp;
      - if @nav[:previous].present?
        Next: 
        = link_to @nav[:previous].name, [:admin, @nav[:previous]]
        &gt;
  .page-header
    %h1
      = @program.name
      %small= link_to 'public', @program
  - if @cover
    - if 
      - if @cover.image?
        .cover{:style => %(background-image: url(#{@cover.s3_url(:original)})) } 
      - else
        .cover{:style => %(background-image: url(#{image_path(@cover, :format => :jpg)})) } 

  .row
    .span10
      .page-header
        %h3 Show summary
      %p= @program.overview

      .page-header
        %h3 Important program settings
      = form_for([:admin, @program]) do |f|
        %fieldset
          .clearfix
            = f.label :name, 'Name'
            .input= f.text_field :name
          .clearfix
            = f.label :search_name, 'Custom search term'
            .input= f.text_field :search_name
          .cleafix
            %label Current search term
            .input
              - if episode = @program.episodes.airs_at_in_past.last || @program.episodes.first
                %span= link_to episode.search_query('hd'), episode.search_url('hd')
          .actions
            %button.btn.primary{:data => {:'disable-with' => 'Please wait...'}} Save

    .span6
      .page-header    
        %h3 Show statistics
      %dl
        %dt Nr of episodes
        %dd
          = pluralize( @program.episodes.count, 'episode')
          in
          = pluralize( @program.max_season_nr, 'season')
        %dt Nr of watchers
        %dd= pluralize(@program.program_preferences_count, 'user')
        %dt First episode aired at
        %dd
          - if @program.episodes.by_airs_at.first.airs_at
            = l(@program.episodes.by_airs_at.first.airs_at, :format => :long)
          - else
            \-
        %dt Last aired
        %dd= @program.episodes.airs_at_in_past.last.airs_at.to_s(:long)
        %dt Last episode update
        %dd= @program.episodes.by_created_at.last.created_at.to_s(:long)
        %dt 
          = link_to 'Images', [:admin, @program, :images]
        %dd
          = @program.images.count
          images of which 
          = @program.images.saved.count
          are saved


  .page-header
    %h3 Current filter

  = form_for([:admin, @configuration]) do |f|
    = f.hidden_field :program_id
    - if @configuration.new_record?
      .alert-message.warning 
        %p
          %strong Notice
          There is no custom filter yet, editing the custom filter below will create a custom one
    %pre= raw @program.active_configuration.filter_data.to_yaml
    .clearfix
      = f.label :filter_data, 'filter data (Hash)'
      .input= f.text_area :filter_data, :class => :span12
    .actions
      %button.btn.primary{:data => {:'disable-with' => 'Please wait...'}}= @configuration.new_record? ? 'Create' : 'Update'
  .row
    .span8
      .page-header
        %h3 Default Filter [HASH]
      %pre= raw @default_configuration.filter_data.pretty_inspect
    .span8
      .page-header
        %h3 Default Filter [YAML]
      %pre= raw @default_configuration.filter_data.to_yaml

  = link_to 'Edit', edit_program_path(@program), :class => :btn
  = link_to 'Back', programs_path, :class => :btn
