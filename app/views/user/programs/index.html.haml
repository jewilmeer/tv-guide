- page_title "#{@user.login.humanize}'s episode guide"
- content_for(:bottom_js_domready) do
  :plain
    $('.autocomplete').autocomplete({
      source: '/programs/search',
      minlength: 2,
      select: function(event, ui) {
        $.post('#{user_programs_path(current_user)}', {id: ui.item.id});
        return true;
      }
    });
%h1
  - if @user == current_user
    Your episode guide
  - else
    == #{@user.login.humanize}'s episode guide

.half-column.flt-left
  .column-block
    %h2 
      %span.header Recently aired
      - if current_user && current_user == @user && current_user.trusted?
        .header_link
          = link_to 'rss', tokened_user_programs_path(:user_credentials => current_user.single_access_token, :format => :rss)
    .body
      - if @past_episodes.any?
        %ul.program_guide= render :partial => 'episodes/episode', :collection => @past_episodes
      - else
        %p.nothing No previous shows
.half-column.flt-right
  .column-block
    %h2 All programs
    .body
      - if @programs.any?
        - if current_user == @user
          %p!== You are currently following #{@programs.map{|p| link_to p.name, p}.to_sentence}
        - else
          %p!== #{@user.login} is currently following #{@programs.map{|p| link_to p.name, p}.to_sentence}
      - else
        %p.nothing No programs following yet
  - if current_user == @user
    .column-block
      %h2 Follow a new program
      .body
        = form_for(:program, :url => suggest_programs_path) do |f|
          .form_row.one_line_form
            %label Add new program
            = text_field_tag :q, params[:q] || '', :class => :autocomplete
            %button.search ?
  .column-block
    %h2 Upcoming episodes
    .body
      - if @upcomming_episodes.any?
        %ul.program_guide= render :partial => 'episodes/episode', :collection => @upcomming_episodes
      - else
        %p.nothing No upcoming shows
