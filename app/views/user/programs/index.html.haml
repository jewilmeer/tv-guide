- page_title "#{@user.login.humanize}'s episode guide"
%h1
  - if current_user == @user
    My digital TV guide
  - else
    == #{@user.login.humanize}'s digital TV guide
  - if current_user == @user
    %button.btn.add_program.pull-right{data: { toggle: :modal, target: '#add_program_block' } } Add new program

%section
  .row
    .span8
      .page-header
        %h4
          Recently aired
          - if current_user.try(:trusted?)
            %small
              = link_to tokened_user_programs_path(:user_credentials => current_user.single_access_token, :format => :rss), :title => 'Use this rss feed to enable automatic downloading (sabnzbd+)', :class => 'pull-right' do
                %i.icon-globe
                RSS
      - if @past_episodes.any?
        - cache([:guide, @user.id, current_user.try(:trusted?), current_user.try(:admin?), @past_episodes.first, @past_episodes.last_updated.first]) do
          = render :partial => 'episodes/past_episodes', :locals => {:past_episodes => @past_episodes}
          = paginate @past_episodes
      - else
        %p No past episodes found

    .span4
      .page-header
        %h4 Next airing
      .well
        - if @upcoming_episodes.any?
          - cache([:guide, @user.id, @upcoming_episodes.first, @upcoming_episodes.last_updated.first]) do
            = render :partial => 'episodes/next_airing', :locals => {:next_episodes => @upcoming_episodes}
        - else
          %p No airing episodes

- if current_user == @user
  #add_program_block.modal.fade
    = simple_form_for [current_user, @program_preference], :remote => true, html: { class: 'form-horizontal' } do |f|
      .modal-header
        = link_to 'x', '#', :class => :close
        %h2 Add new program
      .modal-body
        = f.input :q
        - if current_user.trusted?
          = f.input :search_term_type_id, collection: SearchTermType.all
        - else
          = f.input :search_term_type_id, as: :hidden
          = f.input :program_id, as: :hidden
      .modal-footer
        = f.button :submit
