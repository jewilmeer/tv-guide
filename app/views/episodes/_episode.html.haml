- addition_info ||= episode.airs_at ? :airdate : :created_at
- program = episode.program
%li[episode]
  %strong
    == #{link_to episode.program.name, episode.program}
    == - #{link_to episode.title, [episode.program, episode]} (#{episode.season_and_episode})
  %br
  - case addition_info
    - when :airdate
      - if episode.airs_at.future?
        == Airing on #{l episode.airs_at, :format => :with_day}
      - else
        == Aired on #{l episode.airs_at, :format => :with_day}
      - if current_user && current_user.trusted? && episode.airs_at.past?
        %br
        = link_to 'Search', search_program_episode_path(program, episode), :target => '_blank'
        \|
        = link_to 'Search HD', search_program_episode_path(program, episode, :hd => true), :target => '_blank'
        - if episode.nzb?
          \|
          = link_to 'Download', program_episode_path(program, episode, :format => :nzb)
        - if current_user.admin?
          \|
          = link_to 'Redownload', admin_episode_path(episode, :format => :nzb), :method => :put, :remote => true

    - when :created_at
      == Added #{distance_of_time_in_words_to_now(episode.created_at)} ago
  .hover.right_top{:style => 'display: none'}
    - if current_user
      - if current_user.programs.include?(episode.program)
        = link_to icon_tag('delete', {:title => 'Remove this program from my guide'}), user_program_path(current_user, episode.program), :method => :delete
      - else
        = link_to icon_tag('add', {:title => 'Add this program to my guide'}), user_programs_path(current_user, :id => episode.program.id), :method => :post
    - else
      = link_to icon_tag('add', {:title => 'Login to create your personal guide'}), login_path