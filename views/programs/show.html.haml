- content_for(:bottom_js_domready) do
  :plain
    $('#check_update')
      .bind('ajax:loading', function() {
        var $this = $(this);
        $this.html('Checking...');
      })
      .bind('ajax:failure', function() {
        var $this = $(this);
        $this.html( 'Update failed!' );
      })
      .bind('ajax:success', function(xhr,data,status) {
        var $this = $(this);
        data      = data.replace(/\W/, '');
        if( data == 'true' ) {
          $this.html('Update found, updating...')
          $.ajax({
            url: '#{program_path(@program)}', 
            data: { _method: 'put' },
            success: function() {
              $this.html('Update complete, reloading!');
              document.location.href = document.location.href;
            }
          });
        } else {
          $this.html('No update available');
        }
      })
%h1== Programma: #{@program.name} [#{@program.status}]

%section
  = image_tag( @program.banner_url, :class => :flt_left ) if @program.banner?
  %ul.flt_right 
    %li== #{pluralize(@program.users.count, 'watcher')}
    %li== Last updated #{distance_of_time_in_words_to_now(@program.tvdb_last_update)} ago
    %li= link_to 'Imdb page', "http://www.imdb.com/title/#{@program.imdb_id}"
    %li= link_to 'View update list', program_updates_path(@program)
    - if current_user
      %li= link_to 'Check for updates', edit_program_path(@program), :id => :check_update, :remote => true, :'ajax:loading' => 'checking...'
      - if current_user.programs.include?(@program)
        %li= link_to 'Remove from your episode guide', user_program_path(current_user, @program), :method => :delete
      - else
        %li= link_to 'Add to your episode guide', user_programs_path(current_user, :id => @program.id), :method => :post

.row_seperator
%table
  %tr
    %th{:width => 100} Runtime
    %td= pluralize( @program.runtime, 'minute')
    %th{:width => 100} Genres
    %td= @program.genres.to_sentence(:last_word_connector => ' and ')
    %th{:width => 100} Network
    %td{:width => 150}= @program.network
  %tr
    %th Next episode
    %td
      - if episode = @program.episodes.airs_at_after(Time.now).first
        = l episode.airs_at, :format => :long
      - else
        \-
    %th Thetvdb rating
    %td= @program.tvdb_rating || 'Not available'
    %th Content rating
    %td= @program.contentrating || 'Not available'
  - if @program.actors.any?
    %tr
      %th.top Actors
      %td{:colspan => 5}= @program.actors.to_sentence(:last_word_connector => ' and ')
  %tr
    %th.top Overview
    %td{:colspan => 5}= @program.overview

.row_seperator

- if @program.seasons.any?
  .tabs
    %ul
      - @program.seasons.by_nr(:desc).each do |season|
        %li
          %a{:href => "#tabs-#{season.nr}"}
            - if season.nr == 0
              Pilots & Specials
              == (#{season.episodes.length})
            - else
              == Season #{season.nr} (#{season.episodes.length})
            
    - @program.seasons.by_nr(:desc).each do |season|
      %div{:id => "tabs-#{season.nr}"}
        %table.full_width
          %thead
            %tr
              %th Title
              %th{:width => 150} Airdate
          %tbody
          - season.episodes.by_id(:desc).each do |episode|
            %tr[episode]
              %td
                = link_to episode.full_episode_title, [@program, episode]
                - if current_user && current_user.trusted? && episode.airs_at && episode.airs_at.past?
                  - if episode.nzb?
                    == [#{link_to "Download", download_program_episode_path(@program, episode)}]
                  == [#{link_to "Search", search_program_episode_path(@program, episode)}]
                  == [#{link_to "Search HD", search_program_episode_path(@program, episode, :hd => true)}]
                  - if current_user.admin?
                    \|
                    = link_to 'Redownload', admin_episode_path(episode, :format => :nzb), :method => :put
                  
              %td{:width => 220}
                - if episode.airs_at
                  = l(episode.airs_at.to_date, :format => :with_day)
                - else
                  \-
- else
  %p.nothing No seasons yet!

